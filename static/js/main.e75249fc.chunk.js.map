{"version":3,"sources":["Components/Post.js","Components/GifSearchModal.js","Components/PostMessage.js","App.js","reportWebVitals.js","index.js"],"names":["Post","props","react_default","a","createElement","className","onSubmit","submitPost","Create_default","href","Collections_default","VideoCall_default","IconButton","Close_default","Avatar","rows","placeholder","onChange","handleTextarea","PersonAddAlt1_default","style","color","width","type","GifBox_default","onClick","fetchData","LocationOn_default","EventNote_default","Https_default","value","GifSearchModal","_ref","gifLinks","handleImageClick","handleSearch","Fragment","map","el","key","id","src","images","fixed_height","url","alt","PostMessage","postMsg","text","imageId","App","_useState","useState","_useState2","Object","slicedToArray","setGifLinks","_useState3","_useState4","search","setSearch","_useState5","_useState6","textarea","setTextarea","_useState7","_useState8","setPostMsg","Post_Post","fetch","then","response","json","data","console","log","e","target","preventDefault","alert","PostMessage_PostMessage","GifSearchModal_GifSearchModal","event","searchWord","newSearch","filter","gif","title","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e75249fc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../Css/post.css\";\nimport { Avatar, IconButton } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\nimport VideoCallIcon from \"@mui/icons-material/VideoCall\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport HttpsIcon from \"@mui/icons-material/Https\";\nimport PersonAddAlt1Icon from \"@mui/icons-material/PersonAddAlt1\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport GifBoxIcon from \"@mui/icons-material/GifBox\";\nimport EventNoteIcon from \"@mui/icons-material/EventNote\";\n\n\nexport const Post = (props) => {\n  return (\n    <div className=\"post\">\n        <div className=\"postPop\">\n          <form onSubmit={props.submitPost}>\n            <div className=\"postHeading\">\n              <div className=\"postHeadingleft\">\n                <CreateIcon /> <a href=\"#\" className=\"heading\"> Compose Post </a>\n              </div>\n              <div className=\"postHeadingleft\">\n                <CollectionsIcon /> <a href=\"#\" className=\"heading\"> Photo/Video Album </a>\n              </div>\n              <div className=\"postHeadingleft\">\n                <VideoCallIcon /> <a href=\"#\" className=\"heading\"> Live Video </a>\n              </div>\n              <div className=\"postHeadingRight\">\n                <IconButton > <CloseIcon /> </IconButton>\n              </div>\n            </div>\n\n            <div className=\"postTop\">\n              <Avatar />\n            </div>\n            <div className=\"postBody\">\n              <textarea rows=\"3\" placeholder=\"Write something here... \"  onChange={props.handleTextarea}/>\n            </div>\n\n            <div className=\"postBottom\">\n              <div className=\"postBottomLeft\">\n                <div className=\"leftOption\">\n                  <PersonAddAlt1Icon style={{color:'blue',width:'20px'}}/>\n                  <button className=\"post-button\" type=\"button\" >Tag friends</button>\n                </div>\n                <div className=\"leftOption\">\n                  <GifBoxIcon style={{color:'grey',width:'20px'}}/>\n                <button className=\"post-button\"  type=\"button\" onClick={props.fetchData} >GIF </button>  \n                </div>\n              </div>\n\n              <div className=\"postBottomRight\">\n                <div className=\"rightOption\">\n                  <LocationOnIcon style={{color:'red',width:'20px'}}/>\n                  <button className=\"post-button\" type=\"button\">Check in</button>\n                </div>\n                <div className=\"rightOption\">\n                  <EventNoteIcon style={{color:'lightred',width:'20px'}}/>\n                  <button className=\"post-button\" type=\"button\">Tag Event</button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"postFooter\">\n              <div className=\"postFoterLeft\">\n                {/* <h5>Add to your post</h5> */}\n              </div>\n              <div className=\"postFoterRight\">\n                <HttpsIcon className=\"icon\" />{\" \"}\n                <input type=\"button\" className=\"post_button\" value=\"Only me\" />\n                <input type=\"submit\" className=\"post_submit\" value=\"Post\" />\n              </div>\n            </div>\n          </form>\n        </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport \"../Css/gifSearchModal.css\";\n\nexport const GifSearchModal = ({gifLinks,handleImageClick,handleSearch}) =>{\n    return (\n      <>\n       { gifLinks != 0  && ( \n      <div className=\"modalPop\">\n         <div className=\"modalHeading\">\n            <input type=\"text\" placeholder=\"Search gif across app..\"  onChange={handleSearch} className='searchBar' />\n         </div>\n\n               <div className=\"modalBody\">\n                  { gifLinks.map(el =>{\n                     return (\n                        <div className=\"container\" key={el.id}>\n                              <img src={el.images.fixed_height.url} onClick={()=>handleImageClick(el)} style={{width:\"250px\" ,color:\"red\"}} alt=\"gif\" />\n                        </div>\n                     )\n                     }\n                  )}\n                      \n               </div>\n      </div>\n)}\n</>\n)}","import React from 'react';\nimport { Avatar} from \"@mui/material\";\nimport \"../Css/postMessage.css\";\n\nexport const PostMessage = ({postMsg, gifLinks}) => {\n  return(\n    <div className='postMessage'>\n        <div className=\"messageHeader\">\n        <Avatar />\n        </div>\n        <div className=\"messageBody\">\n                <p className='text'>{postMsg.text}</p>\n                { gifLinks.map(el =>{\n                     return (\n                        <div className=\"gif\" key={el.id}>\n                           { el.id == postMsg.imageId ?\n                              <img src={el.images.fixed_height.url} style={{color:\"red\"}} alt=\"gif\" />\n                           :\n                           // console.log(\"id is not matched\")\n                         \"\"\n                            }  \n                        </div>\n                     )\n                     }\n                  )}\n        </div>\n  </div>\n  )\n};\n","\nimport './App.css';\nimport {Post} from \"./Components/Post\";\nimport {GifSearchModal} from \"./Components/GifSearchModal\";\nimport React, { useState} from 'react';\nimport { PostMessage } from './Components/PostMessage';\nimport { usePreviousProps } from '@mui/utils';\n\nfunction App() {\n  const [gifLinks, setGifLinks] = useState([])\n  const [search, setSearch] = useState(\"\");\n  const [textarea, setTextarea] = useState(\"\");\n  const [postMsg, setPostMsg] = useState({imageId:\"\",text:\"\"});\n\n            //gif fetch function\n const fetchData = () =>{ \n        fetch( \"https://api.giphy.com/v1/gifs/search?q=${trending}&api_key=tnAte8frboaXuOzCyt9CSmLwaPCpEiYr&limit=50\")\n            .then(response => response.json())\n            .then(gifLinks => {\n                setGifLinks(gifLinks.data);\n                console.log(gifLinks);        \n                console.log(\"working\");\n            }); \n          }\n\n  const handleTextarea =(e) =>{\n    setTextarea(e.target.value);\n  }\n  \n  const handleImageClick = (el) =>{\n       // console.log(\"you clicked on image\")\n      //  console.log(el.id);\n      \n        //for storing text and gif click information\n        setPostMsg({\n          imageId:el.id,        \n          text: textarea\n        })\n  }\n        //searching for gif\n  const handleSearch = (event) => {\n    const searchWord = event.target.value;\n            console.log(searchWord); \n\n   const newSearch = gifLinks.filter(gif=>{\n     return gif.title.toLowerCase().includes(searchWord.toLowerCase());\n    });\n    setGifLinks(newSearch)\n    setSearch(search);\n\n      if(newSearch == false)\n      {\n          alert(\"no match try again\");\n      }\n           console.log(newSearch);\n    \n           // console.log(search);\n  }\n\n  const submitPost =(e)=>{\n    e.preventDefault()\n          // console.log(\"post is created\")\n    if(postMsg.imageId ==\"\" && postMsg.text ==\"\")\n    {\n      alert(\"please provide both Text and Gif input\")\n    }else{\n      //  console.log(postMsg);\n    }\n  }\n\n  return (\n    <div className=\"app\">\n        <Post fetchData={fetchData}  handleTextarea={handleTextarea} submitPost={submitPost}/>\n        {  (postMsg.imageId && postMsg.text) != 0 ?\n        <PostMessage postMsg={postMsg}  gifLinks={gifLinks} />\n        :\n        <GifSearchModal  gifLinks={gifLinks} handleImageClick={handleImageClick} handleSearch={handleSearch}/>\n        }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}